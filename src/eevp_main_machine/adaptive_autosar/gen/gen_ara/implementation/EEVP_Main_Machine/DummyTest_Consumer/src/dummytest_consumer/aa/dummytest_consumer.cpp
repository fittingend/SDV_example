///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : dummytest_consumer.cpp
/// SOFTWARE COMPONENT NAME           : DummyTest_Consumer
/// GENERATED DATE                    : 2025-08-30 10:53:18
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "dummytest_consumer/aa/dummytest_consumer.h"
 
namespace dummytest_consumer
{
namespace aa
{
 
DummyTest_Consumer::DummyTest_Consumer()
    : m_logger(ara::log::CreateLogger("TCON", "SWC", ara::log::LogLevel::kVerbose))
    , m_running{false}
    , m_workers(2)
{
}
 
DummyTest_Consumer::~DummyTest_Consumer()
{
}
 
bool DummyTest_Consumer::Initialize()
{
    m_logger.LogVerbose() << "DummyTest_Consumer::Initialize";
    
    bool init = true;
    
    m_DummyTest_RPort = std::make_unique<dummytest_consumer::aa::port::DummyTest_RPort>();
    
    // put your code for initialization
    
    return init;
}
 
void DummyTest_Consumer::Start()
{
    m_logger.LogVerbose() << "DummyTest_Consumer::Start";
    
    m_DummyTest_RPort->Start();
}
 
void DummyTest_Consumer::Terminate()
{
    m_logger.LogVerbose() << "DummyTest_Consumer::Terminate";
    
    // stop running
    m_running = false;
    
    m_DummyTest_RPort->Terminate();
}
 
void DummyTest_Consumer::Run()
{
    m_logger.LogVerbose() << "DummyTest_Consumer::Run";
    
    // start running
    m_running = true;
    
    m_workers.Async([this] { m_DummyTest_RPort->ReceiveEventDeviceEventCyclic(); });
    m_workers.Async([this] { m_DummyTest_RPort->ReceiveFieldDeviceFieldCyclic(); });
    
    m_workers.Wait();
}
 
} /// namespace aa
} /// namespace dummytest_consumer
