///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : monitoringmanager.h
/// SOFTWARE COMPONENT NAME           : MonitoringManager
/// GENERATED DATE                    : 2025-08-30 10:53:23
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_MONITORINGMANAGER_AA_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_MONITORINGMANAGER_AA_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "monitoringmanager/aa/port/pportmonitoringmanagement.h"
#include "monitoringmanager/aa/port/rportdms.h"
#include "monitoringmanager/aa/port/rportdrvseat.h"
#include "monitoringmanager/aa/port/rporthvac.h"
#include "monitoringmanager/aa/port/rportmoodlamp.h"
#include "monitoringmanager/aa/port/rportotamonitoring.h"
#include "monitoringmanager/aa/port/rportpdwfront.h"
#include "monitoringmanager/aa/port/rportpdwrear.h"
#include "monitoringmanager/aa/port/rportpower.h"
#include "monitoringmanager/aa/port/rportrearcurtain.h"
#include "monitoringmanager/aa/port/rportroa.h"
#include "monitoringmanager/aa/port/rportsmartfilm.h"
#include "monitoringmanager/aa/port/rportstatemanager.h"
#include "monitoringmanager/aa/port/rportwiper.h"
 
#include "para/swc/port_pool.h"
 
namespace monitoringmanager
{
namespace aa
{
 
class MonitoringManager
{
public:
    /// @brief Constructor
    MonitoringManager();
    
    /// @brief Destructor
    ~MonitoringManager();
    
    /// @brief Initialize software component
    bool Initialize();
    
    /// @brief Start software component
    void Start();
    
    /// @brief Terminate software component
    void Terminate();
    
    /// @brief Run software component
    void Run();
    
private:
    /// @brief Running status of software component
    bool m_running;
    
    /// @brief Pool of port
    ::para::swc::PortPool m_workers;
    
    /// @brief Logger for software component
    ara::log::Logger& m_logger;
    
    /// @brief Instance of Port {MonitoringManager.PPortMonitoringManagement}
    std::unique_ptr<monitoringmanager::aa::port::PPortMonitoringManagement> m_PPortMonitoringManagement;
    
    /// @brief Instance of Port {MonitoringManager.RPortDms}
    std::unique_ptr<monitoringmanager::aa::port::RPortDms> m_RPortDms;
    
    /// @brief Instance of Port {MonitoringManager.RPortDrvSeat}
    std::unique_ptr<monitoringmanager::aa::port::RPortDrvSeat> m_RPortDrvSeat;
    
    /// @brief Instance of Port {MonitoringManager.RPortHvac}
    std::unique_ptr<monitoringmanager::aa::port::RPortHvac> m_RPortHvac;
    
    /// @brief Instance of Port {MonitoringManager.RPortMoodLamp}
    std::unique_ptr<monitoringmanager::aa::port::RPortMoodLamp> m_RPortMoodLamp;
    
    /// @brief Instance of Port {MonitoringManager.RPortOtaMonitoring}
    std::unique_ptr<monitoringmanager::aa::port::RPortOtaMonitoring> m_RPortOtaMonitoring;
    
    /// @brief Instance of Port {MonitoringManager.RPortPDWFront}
    std::unique_ptr<monitoringmanager::aa::port::RPortPDWFront> m_RPortPDWFront;
    
    /// @brief Instance of Port {MonitoringManager.RPortPDWRear}
    std::unique_ptr<monitoringmanager::aa::port::RPortPDWRear> m_RPortPDWRear;
    
    /// @brief Instance of Port {MonitoringManager.RPortPower}
    std::unique_ptr<monitoringmanager::aa::port::RPortPower> m_RPortPower;
    
    /// @brief Instance of Port {MonitoringManager.RPortRearCurtain}
    std::unique_ptr<monitoringmanager::aa::port::RPortRearCurtain> m_RPortRearCurtain;
    
    /// @brief Instance of Port {MonitoringManager.RPortRoa}
    std::unique_ptr<monitoringmanager::aa::port::RPortRoa> m_RPortRoa;
    
    /// @brief Instance of Port {MonitoringManager.RPortSmartFilm}
    std::unique_ptr<monitoringmanager::aa::port::RPortSmartFilm> m_RPortSmartFilm;
    
    /// @brief Instance of Port {MonitoringManager.RPortStateManager}
    std::unique_ptr<monitoringmanager::aa::port::RPortStateManager> m_RPortStateManager;
    
    /// @brief Instance of Port {MonitoringManager.RPortWiper}
    std::unique_ptr<monitoringmanager::aa::port::RPortWiper> m_RPortWiper;
};
 
} /// namespace aa
} /// namespace monitoringmanager
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_MONITORINGMANAGER_AA_H