///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : rport_zone2rsva.h
/// SOFTWARE COMPONENT NAME           : RPort_Zone2RsvA
/// GENERATED DATE                    : 2025-08-30 10:53:39
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_RPORT_SOA_POWER_AA_RPORT_ZONE2RSVA_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_RPORT_SOA_POWER_AA_RPORT_ZONE2RSVA_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "zone2/reserved/a/zone2rsva_proxy.h"
 
#include "ara/log/logger.h"
 
#include <mutex>
#include <thread>
 
namespace soa_power
{
namespace aa
{
namespace port
{
 
class RPort_Zone2RsvA
{
public:
    /// @brief Constructor
    RPort_Zone2RsvA();
    
    /// @brief Destructor
    ~RPort_Zone2RsvA();
    
    /// @brief Start port
    void Start();
    
    /// @brief Terminate port
    void Terminate();

    /// @brief Subscribe field notification, zone2DeviceNormal
    void Subscribezone2DeviceNormal();
     
    /// @brief Stop field subscription, zone2DeviceNormal
    void StopSubscribezone2DeviceNormal();
     
    /// @brief Field notification receive handler, zone2DeviceNormal
    void ReceiveFieldzone2DeviceNormalTriggered();
     
    /// @brief Field notification receive handler, zone2DeviceNormal
    void ReceiveFieldzone2DeviceNormalCyclic();
     
    /// @brief Read field notification value, zone2DeviceNormal
    void ReadValuezone2DeviceNormal(ara::com::SamplePtr<zone2::reserved::a::proxy::fields::zone2DeviceNormal::FieldType const> samplePtr);
     
    /// @brief Regist callback from software component
    void RegistFieldHandlerzone2DeviceNormal(std::function<void(const zone2::reserved::a::proxy::fields::zone2DeviceNormal::FieldType&)> handler);
    
    /// @brief Getter method using by software component, zone2DeviceNormal
    void Getzone2DeviceNormal();

private:
    /// @brief Callback for find service
    void Find(ara::com::ServiceHandleContainer<zone2::reserved::a::proxy::Zone2RsvAProxy::HandleType> handles,
              ara::com::FindServiceHandle findHandle);

    /// @brief Callback for field notification receiver, zone2DeviceNormal
    void RegistReceiverzone2DeviceNormal();
    
private:
    /// @brief Logger for this port
    ara::log::Logger& m_logger;
    
    /// @brief Flag of port status
    bool m_running;
    
    /// @brief Flag of find service status
    bool m_found;
    
    /// @brief Mutex for this port
    std::mutex m_mutex; 
    
    /// @brief AUTOSAR Port Interface
    std::unique_ptr<zone2::reserved::a::proxy::Zone2RsvAProxy> m_interface;
    
    /// @brief Find service handle
    std::unique_ptr<ara::com::FindServiceHandle> m_findHandle;

    /// @brief Callback from software component, zone2DeviceNormal
    std::function<void(const zone2::reserved::a::proxy::fields::zone2DeviceNormal::FieldType&)> m_receiverzone2DeviceNormal;
    
};
 
} /// namespace port
} /// namespace aa
} /// namespace soa_power
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_RPORT_SOA_POWER_AA_RPORT_ZONE2RSVA_H