///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : pportsubscriptionmanagement.h
/// SOFTWARE COMPONENT NAME           : PPortSubscriptionManagement
/// GENERATED DATE                    : 2025-08-30 10:53:48
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_PPORT_SUBSCRIPTIONMANAGER_AA_PPORTSUBSCRIPTIONMANAGEMENT_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_PPORT_SUBSCRIPTIONMANAGER_AA_PPORTSUBSCRIPTIONMANAGEMENT_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "eevp/subscription/service/subscriptionmanagement_skeleton.h"
 
#include "ara/log/logger.h"
 
#include <mutex>
#include <thread>
 
namespace eevp
{
namespace subscription
{
namespace service
{
namespace skeleton
{
 
class SubscriptionManagementSkeletonImpl : public SubscriptionManagementSkeleton
{
public:
    /// @brief Constructor
    SubscriptionManagementSkeletonImpl(ara::core::InstanceSpecifier instanceSpec, ara::com::MethodCallProcessingMode mode = ara::com::MethodCallProcessingMode::kEvent);
    
    /// @brief Request with Response method, getSubscriptionInfo
    ara::core::Future<SubscriptionManagementSkeleton::getSubscriptionInfoOutput> getSubscriptionInfo(const eevp::type::String& appName) override;

private:
    /// @brief Logger for this port
    ara::log::Logger& m_logger;

};
 
} /// namespace skeleton
} /// namespace service
} /// namespace subscription
} /// namespace eevp

namespace subscriptionmanager
{
namespace aa
{
namespace port
{
 
class PPortSubscriptionManagement
{
public:
    /// @brief Constructor
    PPortSubscriptionManagement();
    
    /// @brief Destructor
    ~PPortSubscriptionManagement();
    
    /// @brief Start port
    void Start();
    
    /// @brief Terminate port
    void Terminate();
    
    /// @brief Write event data to buffer, notifySubscriptionInfo
    void WriteDatanotifySubscriptionInfo(const eevp::subscription::service::skeleton::events::notifySubscriptionInfo::SampleType& data);
     
    /// @brief Send event cyclic from buffer data, notifySubscriptionInfo
    void SendEventnotifySubscriptionInfoCyclic();
     
    /// @brief Send event directly from buffer data, notifySubscriptionInfo
    void SendEventnotifySubscriptionInfoTriggered();
     
    /// @brief Send event directly with argument, notifySubscriptionInfo
    void SendEventnotifySubscriptionInfoTriggered(const eevp::subscription::service::skeleton::events::notifySubscriptionInfo::SampleType& data);
     
private:
    /// @brief Logger for this port
    ara::log::Logger& m_logger;
    
    /// @brief Flag of port status
    bool m_running;
    
    /// @brief Mutex for this port
    std::mutex m_mutex;
    
    /// @brief AUTOSAR Port Interface
    std::unique_ptr<eevp::subscription::service::skeleton::SubscriptionManagementSkeletonImpl> m_interface;
    
    /// @brief Data for event, notifySubscriptionInfo
    eevp::subscription::service::skeleton::events::notifySubscriptionInfo::SampleType m_notifySubscriptionInfoData;
};
 
} /// namespace port
} /// namespace aa
} /// namespace subscriptionmanager
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_PPORT_SUBSCRIPTIONMANAGER_AA_PPORTSUBSCRIPTIONMANAGEMENT_H