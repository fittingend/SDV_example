///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : lightbeep.cpp
/// SOFTWARE COMPONENT NAME           : LightBeep
/// GENERATED DATE                    : 2025-08-27 16:35:19
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "lightbeep/aa/lightbeep.h"
 
namespace lightbeep
{
namespace aa
{
 
LightBeep::LightBeep()
    : m_logger(ara::log::CreateLogger("LIBP", "SWC", ara::log::LogLevel::kVerbose))
    , m_running{false}
    , m_workers(0)
{
}
 
LightBeep::~LightBeep()
{
}
 
bool LightBeep::Initialize()
{
    m_logger.LogVerbose() << "LightBeep::Initialize";
    
    bool init = true;
    
    m_PPortLight = std::make_unique<lightbeep::aa::port::PPortLight>();
    m_PPortBeep = std::make_unique<lightbeep::aa::port::PPortBeep>();
    
    // put your code for initialization
    
    return init;
}
 
void LightBeep::Start()
{
    m_logger.LogVerbose() << "LightBeep::Start";
    
    m_PPortLight->Start();
    m_PPortBeep->Start();
}
 
void LightBeep::Terminate()
{
    m_logger.LogVerbose() << "LightBeep::Terminate";
    
    // stop running
    m_running = false;
    
    m_PPortLight->Terminate();
    m_PPortBeep->Terminate();
}
 
void LightBeep::Run()
{
    m_logger.LogVerbose() << "LightBeep::Run";
    
    // start running
    m_running = true;

    m_workers.Wait();
}
 
} /// namespace aa
} /// namespace lightbeep
