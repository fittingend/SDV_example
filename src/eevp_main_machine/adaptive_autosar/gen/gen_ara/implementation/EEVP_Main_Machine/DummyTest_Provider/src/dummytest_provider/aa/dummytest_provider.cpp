///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : dummytest_provider.cpp
/// SOFTWARE COMPONENT NAME           : DummyTest_Provider
/// GENERATED DATE                    : 2025-08-30 10:53:19
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "dummytest_provider/aa/dummytest_provider.h"
 
namespace dummytest_provider
{
namespace aa
{
 
DummyTest_Provider::DummyTest_Provider()
    : m_logger(ara::log::CreateLogger("TPRV", "SWC", ara::log::LogLevel::kVerbose))
    , m_running{false}
    , m_workers(2)
{
}
 
DummyTest_Provider::~DummyTest_Provider()
{
}
 
bool DummyTest_Provider::Initialize()
{
    m_logger.LogVerbose() << "DummyTest_Provider::Initialize";
    
    bool init = true;
    
    m_DummyTest_PPort = std::make_unique<dummytest_provider::aa::port::DummyTest_PPort>();
    
    // put your code for initialization
    
    return init;
}
 
void DummyTest_Provider::Start()
{
    m_logger.LogVerbose() << "DummyTest_Provider::Start";
    
    m_DummyTest_PPort->Start();
}
 
void DummyTest_Provider::Terminate()
{
    m_logger.LogVerbose() << "DummyTest_Provider::Terminate";
    
    // stop running
    m_running = false;
    
    m_DummyTest_PPort->Terminate();
}
 
void DummyTest_Provider::Run()
{
    m_logger.LogVerbose() << "DummyTest_Provider::Run";
    
    // start running
    m_running = true;
    
    m_workers.Async([this] { m_DummyTest_PPort->SendEventDeviceEventCyclic(); });
    m_workers.Async([this] { m_DummyTest_PPort->NotifyFieldDeviceFieldCyclic(); });
    
    m_workers.Wait();
}
 
} /// namespace aa
} /// namespace dummytest_provider
