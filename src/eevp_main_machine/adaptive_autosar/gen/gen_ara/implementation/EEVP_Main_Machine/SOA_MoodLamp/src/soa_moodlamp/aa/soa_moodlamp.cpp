///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : soa_moodlamp.cpp
/// SOFTWARE COMPONENT NAME           : SOA_MoodLamp
/// GENERATED DATE                    : 2025-08-30 10:53:38
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "soa_moodlamp/aa/soa_moodlamp.h"
 
namespace soa_moodlamp
{
namespace aa
{
 
SOA_MoodLamp::SOA_MoodLamp()
    : m_logger(ara::log::CreateLogger("SMLM", "SWC", ara::log::LogLevel::kVerbose))
    , m_running{false}
    , m_workers(4)
{
}
 
SOA_MoodLamp::~SOA_MoodLamp()
{
}
 
bool SOA_MoodLamp::Initialize()
{
    m_logger.LogVerbose() << "SOA_MoodLamp::Initialize";
    
    bool init = true;
    
    m_PPort_SOA_MoodLamp = std::make_unique<soa_moodlamp::aa::port::PPort_SOA_MoodLamp>();
    m_RPort_Zone1Mlm = std::make_unique<soa_moodlamp::aa::port::RPort_Zone1Mlm>();
    m_RPort_Zone1VehicleInfo = std::make_unique<soa_moodlamp::aa::port::RPort_Zone1VehicleInfo>();
    
    // put your code for initialization
    
    return init;
}
 
void SOA_MoodLamp::Start()
{
    m_logger.LogVerbose() << "SOA_MoodLamp::Start";
    
    m_PPort_SOA_MoodLamp->Start();
    m_RPort_Zone1Mlm->Start();
    m_RPort_Zone1VehicleInfo->Start();
}
 
void SOA_MoodLamp::Terminate()
{
    m_logger.LogVerbose() << "SOA_MoodLamp::Terminate";
    
    // stop running
    m_running = false;
    
    m_PPort_SOA_MoodLamp->Terminate();
    m_RPort_Zone1Mlm->Terminate();
    m_RPort_Zone1VehicleInfo->Terminate();
}
 
void SOA_MoodLamp::Run()
{
    m_logger.LogVerbose() << "SOA_MoodLamp::Run";
    
    // start running
    m_running = true;
    
    m_workers.Async([this] { m_PPort_SOA_MoodLamp->NotifyFieldsoaMlmStatusCyclic(); });
    m_workers.Async([this] { m_PPort_SOA_MoodLamp->NotifyFieldsoaMlmSwVersionCyclic(); });
    m_workers.Async([this] { m_RPort_Zone1Mlm->ReceiveFieldzone1MlmStatusCyclic(); });
    m_workers.Async([this] { m_RPort_Zone1VehicleInfo->ReceiveEventVehicleInfoCyclic(); });
    
    m_workers.Wait();
}
 
} /// namespace aa
} /// namespace soa_moodlamp
