///////////////////////////////////////////////////////////////////////////////////////////////////////////
///                                                                                                        
/// Copyright, 2021 PopcornSAR Co., Ltd. All rights reserved.                                              
/// This software is copyright protected and proprietary to PopcornSAR Co., Ltd.                           
/// PopcornSAR Co., Ltd. grants to you only those rights as set out in the license conditions.             
///                                                                                                        
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// AUTOSAR VERSION                   : R20-11
/// GENERATED BY                      : PARA, Adaptive Application Generator
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// GENERATED FILE NAME               : servicecreator.h
/// SOFTWARE COMPONENT NAME           : ServiceCreator
/// GENERATED DATE                    : 2025-08-20 13:31:40
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef PARA_AA_GEN_SOFTWARE_COMPONENT_SERVICECREATOR_AA_H
#define PARA_AA_GEN_SOFTWARE_COMPONENT_SERVICECREATOR_AA_H
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/// INCLUSION HEADER FILES
///////////////////////////////////////////////////////////////////////////////////////////////////////////
// #include "servicecreator/aa/port/pport_bcm_wiperwash.h"
// #include "servicecreator/aa/port/pport_ctrl_moodlamp.h"
// #include "servicecreator/aa/port/pport_ctrl_rearcurtain.h"
// #include "servicecreator/aa/port/pport_snsr_facedetectmodule.h"
// #include "servicecreator/aa/port/pport_snsr_heartbeat.h"
// #include "servicecreator/aa/port/pport_snsr_uss.h"
// #include "servicecreator/aa/port/pport_tms_ac.h"
// #include "servicecreator/aa/port/pport_tms_envmonitor.h"
// #include "servicecreator/aa/port/pport_tms_fragrance.h"
// #include "servicecreator/aa/port/pport_vcs_accrpedal.h"
#include "servicecreator/aa/port/pport_vcs_brake.h"
#include "servicecreator/aa/port/pport_vcs_brakepedal.h"
// #include "servicecreator/aa/port/pport_vcs_epb.h"
#include "servicecreator/aa/port/pport_vcs_gear.h"
#include "servicecreator/aa/port/pport_vcs_vehspd.h"
 
#include "para/swc/port_pool.h"
 
namespace servicecreator
{
namespace aa
{
 
class ServiceCreator
{
public:
    /// @brief Constructor
    ServiceCreator();
    
    /// @brief Destructor
    ~ServiceCreator();
    
    /// @brief Initialize software component
    bool Initialize();
    
    /// @brief Start software component
    void Start();
    
    /// @brief Terminate software component
    void Terminate();
    
    /// @brief Run software component
    void Run();
    
private:
    /// @brief Running status of software component
    bool m_running;
    
    /// @brief Pool of port
    ::para::swc::PortPool m_workers;
    
    /// @brief Logger for software component
    ara::log::Logger& m_logger;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_BCM_WiperWash}
    // std::unique_ptr<servicecreator::aa::port::PPort_BCM_WiperWash> m_PPort_BCM_WiperWash;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_Ctrl_MoodLamp}
    // std::unique_ptr<servicecreator::aa::port::PPort_Ctrl_MoodLamp> m_PPort_Ctrl_MoodLamp;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_Ctrl_RearCurtain}
    // std::unique_ptr<servicecreator::aa::port::PPort_Ctrl_RearCurtain> m_PPort_Ctrl_RearCurtain;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_Snsr_FaceDetectModule}
    // std::unique_ptr<servicecreator::aa::port::PPort_Snsr_FaceDetectModule> m_PPort_Snsr_FaceDetectModule;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_Snsr_HeartBeat}
    // std::unique_ptr<servicecreator::aa::port::PPort_Snsr_HeartBeat> m_PPort_Snsr_HeartBeat;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_Snsr_USS}
    // std::unique_ptr<servicecreator::aa::port::PPort_Snsr_USS> m_PPort_Snsr_USS;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_TMS_AC}
    // std::unique_ptr<servicecreator::aa::port::PPort_TMS_AC> m_PPort_TMS_AC;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_TMS_EnvMonitor}
    // std::unique_ptr<servicecreator::aa::port::PPort_TMS_EnvMonitor> m_PPort_TMS_EnvMonitor;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_TMS_Fragrance}
    // std::unique_ptr<servicecreator::aa::port::PPort_TMS_Fragrance> m_PPort_TMS_Fragrance;
    
    // /// @brief Instance of Port {ServiceCreator.PPort_VCS_AccrPedal}
    // std::unique_ptr<servicecreator::aa::port::PPort_VCS_AccrPedal> m_PPort_VCS_AccrPedal;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_Brake}
    std::unique_ptr<servicecreator::aa::port::PPort_VCS_Brake> m_PPort_VCS_Brake;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_BrakePedal}
    std::unique_ptr<servicecreator::aa::port::PPort_VCS_BrakePedal> m_PPort_VCS_BrakePedal;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_EPB}
    // std::unique_ptr<servicecreator::aa::port::PPort_VCS_EPB> m_PPort_VCS_EPB;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_Gear}
    std::unique_ptr<servicecreator::aa::port::PPort_VCS_Gear> m_PPort_VCS_Gear;
    
    /// @brief Instance of Port {ServiceCreator.PPort_VCS_VehSpd}
    std::unique_ptr<servicecreator::aa::port::PPort_VCS_VehSpd> m_PPort_VCS_VehSpd;
};
 
} /// namespace aa
} /// namespace servicecreator
 
#endif /// PARA_AA_GEN_SOFTWARE_COMPONENT_SERVICECREATOR_AA_H